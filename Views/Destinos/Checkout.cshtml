@model IEnumerable<Proyecto_Vesa.Models.Destino>
@{
    ViewData["Title"] = "Checkout";
}

<div class="container px-3 my-5 clearfix bg-light rounded-lg pt-2 pb-2">
    <div class="text-center border border-primary rounded">
        <h2>Formulario de Pago</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4 pt-2">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Contenido Carrito</span>
                <span class="badge badge-secondary badge-pill quantityCart">0</span>
            </h4>
            <ul class="list-group mb-3 sticky-top" id="detalleCarrito">
                <!-- Llenado con script -->
            </ul>
        </div>
        <div class="col-md-8 order-md-1 pt-2">
            <h4 class="mb-3">Detalles de Envío</h4>
            @using (Html.BeginForm("Checkout", "Destinos", FormMethod.Post, new { @class = "needs-validation checkoutForm", id = "checkoutForm" }))
            {
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="nombre">Nombre</label>
                        <input type="text" class="form-control" id="nombre" name="nombre" placeholder="" value="" required="">
                        <div class="invalid-feedback"> Nombre es un campo requerido. </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="apellido">Apellido</label>
                        <input type="text" class="form-control" id="apellido" name="apellido" value="" required="">
                        <div class="invalid-feedback"> Apellido es un nombre requerido. </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email">Email <span class="text-muted">(Optional)</span></label>
                    <input type="email" class="form-control" id="email" name="email" placeholder="you@mail.com">
                    <div class="invalid-feedback"> Correo es un campo requerido. </div>
                </div>
                <div class="mb-3">
                    <label for="direccion">Dirección</label>
                    <input type="text" class="form-control" id="direccion" name="direccion" placeholder="Col. Flor Blanca" required="">
                    <div class="invalid-feedback"> Dirección es un campo requerido. </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="direccion2">Dirección 2 <span class="text-muted">(Optional)</span></label>
                        <input type="text" class="form-control" id="direccion2" name="direccion2" placeholder="# de casa o apartamento">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="telefono">Teléfono</label>
                        <input type="text" class="form-control" id="telefono" name="telefono" placeholder="# de teléfono de contacto">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-5 mb-3">
                        <label for="pais">País</label>
                        @Html.DropDownList("pais", new[] {
                            new SelectListItem(){Text="El Salvador",Value="El Salvador"}
                            }, "Seleccione País", new { @class = "form-control", required = "" })
                        <div class="invalid-feedback"> Selecciones un país valido. </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="departamento">Departamento</label>
                        @Html.DropDownList("departamento", new[] {
                            new SelectListItem(){Text="Ahuachapan",Value="Ahuachapan"},
                            new SelectListItem(){Text="Cabañas",Value="Cabañas"},
                            new SelectListItem(){Text="Chalatenango",Value="Chalatenango"},
                            new SelectListItem(){Text="Cuscatlan",Value="Cuscatlan"},
                            new SelectListItem(){Text="La Libertad",Value="La Libertad"},
                            new SelectListItem(){Text="La Paz",Value="La Paz"},
                            new SelectListItem(){Text="La Union",Value="La Union"},
                            new SelectListItem(){Text="Morazan",Value="Morazan"},
                            new SelectListItem(){Text="San Miguel",Value="San Miguel"},
                            new SelectListItem(){Text="San Salvador",Value="San Salvador"},
                            new SelectListItem(){Text="San Vicente",Value="San Vicente"},
                            new SelectListItem(){Text="Santa Ana",Value="Santa Ana"},
                            new SelectListItem(){Text="Chalatenango",Value="Chalatenango"},
                            new SelectListItem(){Text="Sonsonate",Value="Sonsonate"}
                            }, "Seleccione Departamento", new { @class = "form-control", required = "" })
                        <div class="invalid-feedback"> Seleccione un departamento valido. </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="codpostal">Código Postal</label>
                        <input type="text" class="form-control" id="codpostal" name="codpostal" placeholder="">
                    </div>
                </div>
                <hr class="mb-1">
                <!-- Section oculta para uso futuro
        <section class="d-none">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" id="same-address">
                <label class="custom-control-label" for="same-address">Shipping address is the same as my billing address</label>
            </div>
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" id="save-info">
                <label class="custom-control-label" for="save-info">Save this information for next time</label>
            </div>
        </section>
        -->
                <h4 class="mt-2">Tipo de Pago</h4>
                <div class="d-block my-3">
                    <div class="custom-control custom-radio">
                        <input id="cash" name="paymentMethod" type="radio" class="custom-control-input" value="cash" checked="" required="">
                        <label class="custom-control-label pt-2" for="cash">Efectivo</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" value="credit" required="">
                        <label class="custom-control-label pt-2" for="credit">Tarjeta de Crédito</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" value="debit" required="">
                        <label class="custom-control-label pt-2" for="debit">Tarjeta de Débito</label>
                    </div>
                </div>
                <section class="d-none" id="datosTarjeta">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="Cc_name">Nombre en Tarjeta</label>
                            <input type="text" class="form-control reqTarjeta" id="Cc_name" name="Cc_name" placeholder="Nombre completo según tarjeta">
                            <div class="invalid-feedback"> Nombre en tarjeta es requerido. </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="Cc_number">Número de tarjeta</label>
                            <input type="text" class="form-control reqTarjeta" id="Cc_number" name="Cc_number" placeholder="">
                            <div class="invalid-feedback">Número de tarjeta es requerido </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="Cc_expiration">Fecha de Expiración</label>
                            <input type="text" class="form-control reqTarjeta" id="Cc_expiration" name="Cc_expiration" placeholder="">
                            <div class="invalid-feedback"> Fecha de Expiración es requerida. </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="Cc_cvv">CVV</label>
                            <input type="text" class="form-control reqTarjeta" id="Cc_cvv" name="Cc_cvv" placeholder="">
                            <div class="invalid-feedback"> Código de Seguridad es requerido. </div>
                        </div>
                    </div>
                </section>
                @Html.Hidden("detalleCarrito", "", new { id = "detalleCarrito" })
                @Html.Hidden("Fecha", @DateTime.Now, new { id = "Fecha" })
                @Html.Hidden("IdUsuario", @ViewBag.UserId, new { id = "IdUsuario" })
                @Html.Hidden("Valor", "", new { id = "Valor" })
                @Html.Hidden("listadoProductos", "", new { id = "listadoProductos" })

                <button class="btn btn-success btn-lg btn-block" type="submit">Efectuar Compra</button>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        //Cargar datos de Carrito
        var carrito = JSON.parse(localStorage.getItem('listaCarritoDestinos'));
        let cuentaCarrito = 0;
        let totalCarrito = 0;

        if (carrito) {

            cuentaCarrito = carrito.length;

            for (var i = 0; i < cuentaCarrito; i++) {
                totalCarrito = totalCarrito + parseFloat(carrito[i].subTotal);

                //Llenar tabla de detalle
                $('#detalleCarrito').append(
                    '<li class="list-group-item d-flex justify-content-between lh-condensed">' +
                    '<div>' +
                    '<h6 class="my-0">' + carrito[i].id + '</h6>' +
                    '<small class="text-muted">' + carrito[i].nombre + '</small>' +
                    '</div>' +
                    '<span class="text-muted">$ ' + carrito[i].subTotal + '</span>' +
                    '</li>'
                );
            }

            //Agregar Total
            $('#detalleCarrito').append(
                '<li class="list-group-item d-flex justify-content-between">' +
                '<span>Total (USD)</span>' +
                '<strong>$ ' + totalCarrito + '</strong>' +
                '</li>'
            );

            //Actualizar total carrito
            $('.totalCarrito').html("$ " + totalCarrito);
            $('.quantityCart').html(cuentaCarrito);
            $('#cart').addClass('backColor2');

            //Enviar lista de productos de carrito a input hidden
            $("#listadoProductos").val(localStorage.getItem('listaCarritoDestinos'));
            $('#Valor').val(totalCarrito);
        } else {
            $('.quantityCart').html(0);
            $('.sumCart').html("$ 0.00");
        }


        //remover item del carrito de compras
        $('.removerItem').on('click', function () {

            let itemBorrar = $(this).data('id');

            Swal.fire({
                title: 'Esta seguro?',
                text: "Esta seguro de querer borrar este artículo?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Sí, remover artículo de mi carrito de compras!'
            }).then((result) => {
                if (result.isConfirmed) {
                    //Eliminar artículo
                    for (var i = 0; i < carrito.length; i++) {
                        if (i === itemBorrar) {
                            carrito.splice(i, 1);
                        }
                    }

                    //Actualizar localStorage con array actualizado
                    localStorage.setItem('listaCarrito', JSON.stringify(carrito));

                    //Recargar pagina carrito
                    location.reload();
                }
            })
        });

        //Borrar carrito de compras
        function borrarCarrito() {
            Swal.fire({
                title: 'Esta seguro?',
                text: "Esta seguro de borrar todo el contenido del Carrito de Compras!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Sí, borrar contenido de carrito!'
            }).then((result) => {
                if (result.isConfirmed) {
                    //Eliminar localStorage
                    localStorage.removeItem('listaCarrito');

                    Swal.fire(
                        'Borrado!',
                        'Contenido de Carrito de Compras eliminado!',
                        'success'
                    )

                    window.location.href = '/productos';
                }
            })
        };


        //Detectar forma de pago
        $('input[name=paymentMethod]').on('click', function () {
            var checked_paymentMethod = document.querySelector('input[name = "paymentMethod"]:checked');

            if (checked_paymentMethod != null) {  //Test if something was checked
                if (checked_paymentMethod.value == "credit" || checked_paymentMethod.value == "debit") {
                    $('#datosTarjeta').removeClass('d-none');
                    $('.reqTarjeta').prop('required',true);
                } else {
                    $('#datosTarjeta').addClass('d-none');
                    $('.reqTarjeta').removeAttr('required');
                }
            } else {
                alert('Nothing checked'); //Alert, nothing was checked.
            }
        });

    </script>
}